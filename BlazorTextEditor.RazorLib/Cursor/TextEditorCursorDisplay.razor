@using BlazorTextEditor.RazorLib.HelperComponents
@inherits TextEditorView

<textarea @ref="_textEditorCursorDisplayElementReference"
          @onkeydown="HandleOnKeyDown"
          id="@TextEditorCursorDisplayId"
          tabindex="@GetTabIndex()"
          class="bte_text-editor-cursor @BlinkAnimationCssClass"
          style="@CursorStyleCss">
</textarea>

<div class="bte_text-editor-caret-row"
     style="@CaretRowStyleCss">
</div>

@if (_textEditorMenuKind != TextEditorMenuKind.None)
{
    <div @onkeydown:stopPropagation="true"
         @onmousedown:stopPropagation="true"
         @onmousemove:stopPropagation="true"
         class="bte_text-editor-context-menu"
         style="@MenuStyleCss">

        <CascadingValue Name="SetShouldDisplayMenuAsync"
                        Value="new Func<TextEditorMenuKind, bool, Task>(SetShouldDisplayMenuAsync)">
            <CascadingValue Name="TextEditorMenuShouldTakeFocusFunc"
                            Value="TextEditorMenuShouldTakeFocus">

                @switch (_textEditorMenuKind)
                {
                    case TextEditorMenuKind.ContextMenu:
                            @OnContextMenuRenderFragment
                        break;
                    case TextEditorMenuKind.AutoCompleteMenu:
                            @AutoCompleteMenuRenderFragment
                        break;
                }
            </CascadingValue>
        </CascadingValue>
    </div>
}