@using BlazorTextEditor.RazorLib.Virtualization
@using BlazorTextEditor.RazorLib.Scrollbar

<div class="bte_gutter-section"
     style="@GetGutterSectionStyleCss()"
     id="@TextEditorViewModel.GutterElementId">
    
    @*
        The GutterSection needs to render the "VirtualizationDisplay"
        in order to increase its ScrollHeight in accordance with
        the "RowSection".
        
        The actual behavior of JavaScript Intersection Observers
        and invoking a providers func when a boundary comes into view
        gets turned off for the gutter. This is unlike the "RowSection".
    *@
    <VirtualizationDisplay VirtualizationResultWithoutTypeMask="TextEditorViewModel.VirtualizationResult"
                           UseHorizontalVirtualization="false"
                           ItemsProviderFunc="null"/>

    @{ var localTextEditorViewModel = TextEditorViewModel; }
    
    @foreach (var virtualizedRow in localTextEditorViewModel.VirtualizationResult.Entries)
    {
        <div class="bte_gutter"
             style="@GetGutterStyleCss(virtualizedRow.Index)">
            @(virtualizedRow.Index + 1)
        </div>
    }
    
    @{
        var heightOfGutter = localTextEditorViewModel.VirtualizationResult.Entries.Length *
                             localTextEditorViewModel.VirtualizationResult.CharacterWidthAndRowHeight.RowHeightInPixels;

        if (heightOfGutter < localTextEditorViewModel.VirtualizationResult.ElementMeasurementsInPixels.Height)
        {
            var remainingHeightToFill = 
                localTextEditorViewModel.VirtualizationResult.ElementMeasurementsInPixels.Height -
                heightOfGutter +
                ScrollbarFacts.SCROLLBAR_SIZE_IN_PIXELS;

            var imaginaryNextIndex = 
                (localTextEditorViewModel.VirtualizationResult.Entries
                    .LastOrDefault()?.Index ?? -1) + 
                1;
            
            <div class="bte_gutter"
                 style="@GetGutterStyleCss(imaginaryNextIndex) height: @(remainingHeightToFill)px;">
            </div>
        }
    }
</div>