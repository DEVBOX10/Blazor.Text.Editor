@using BlazorTextEditor.RazorLib.Cursor
@using BlazorTextEditor.RazorLib.HelperComponents
@using BlazorTextEditor.RazorLib.Keymap
@using BlazorTextEditor.RazorLib.Store.TextEditorCase.ViewModels
@using BlazorTextEditor.RazorLib.TextEditor
@using BlazorTextEditor.RazorLib.TextEditorDisplayInternals
@using BlazorTextEditor.RazorLib.Keymap.VimKeymapSpecifics
@using BlazorTextEditor.RazorLib.Commands
@using System.Collections.Immutable

@inherits TextEditorView

@{
    var textEditorBase = MutableReferenceToTextEditor;
    var textEditorViewModel = ReplaceableTextEditorViewModel;
    var globalTextEditorOptions = TextEditorStatesWrap.Value.GlobalTextEditorOptions;
}

<div style="@TextEditorService.GlobalFontSizeInPixelsStyling @GetGlobalHeightInPixelsStyling() @WrapperStyleCssString"
     class="bte_text-editor-css-wrapper @TextEditorService.GlobalThemeCssClassString @WrapperClassCssString">
    
    @if (textEditorBase is not null &&
         textEditorViewModel is not null)
    {
        <CascadingValue Value="textEditorBase">
            <CascadingValue Value="textEditorViewModel">
                <CascadingValue Value="globalTextEditorOptions">

                    @if (IncludeHeaderHelperComponent)
                    {
                        <TextEditorHeader TextEditorViewModelKey="TextEditorViewModelKey"
                                          HeaderButtonKinds="HeaderButtonKinds"/>
                    }

                    <div @ref="_textEditorDisplayElementReference"
                         @onclick="FocusTextEditorAsync"
                         @onkeydown="HandleOnKeyDownAsync"
                         @onkeydown:preventDefault="true"
                         @oncontextmenu="HandleOnContextMenuAsync"
                         @oncontextmenu:preventDefault="true"
                         @onmousedown="HandleContentOnMouseDownAsync"
                         @onmousemove="HandleContentOnMouseMoveAsync"
                         @ondblclick="HandleContentOnDoubleClickAsync"
                         @onwheel="HandleOnWheelAsync"
                         id="@ContentElementId"
                         style="@TextEditorStyleCssString"
                         class="bte_text-editor bte_unselectable @TextEditorClassCssString"
                         tabindex="-1">

                        <GutterSection/>

                        <BodySection @ref="_bodySection"
                                     TabIndex="TabIndex"
                                     HtmlElementId="@MeasureCharacterWidthAndRowHeightElementId"
                                     ContextMenuRenderFragmentOverride="ContextMenuRenderFragmentOverride"
                                     AutoCompleteMenuRenderFragmentOverride="AutoCompleteMenuRenderFragmentOverride"/>
                        
                        @if (textEditorViewModel.DisplayCommandBar)
                        {
                            <CommandBarDisplay RestoreFocusToTextEditor="FocusTextEditorAsync"/>
                        }
                    </div>

                    @if (IncludeFooterHelperComponent)
                    {
                        <TextEditorFooter TextEditorViewModelKey="TextEditorViewModelKey"/>
                    }
                </CascadingValue>
            </CascadingValue>
        </CascadingValue>
    }
    else
    {
        if (textEditorBase is null)
        {
            <div>The @nameof(TextEditorBase) was null</div>
        }
        else if (textEditorViewModel is not null)
        {
            <div>The @nameof(TextEditorViewModel) was null</div>
        }
    }
</div>