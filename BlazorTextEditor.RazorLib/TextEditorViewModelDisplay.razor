@using BlazorTextEditor.RazorLib.Cursor
@using BlazorTextEditor.RazorLib.HelperComponents
@using BlazorTextEditor.RazorLib.Store.TextEditorCase.ViewModels
@using BlazorTextEditor.RazorLib.TextEditor
@using BlazorTextEditor.RazorLib.TextEditorDisplayInternals

@inherits TextEditorView

@{
    var textEditor = TextEditorStatesSelection.Value;
    var textEditorViewModel = ReplaceableTextEditorViewModel;
}

<div>
    _onAfterRenderCounter @_onAfterRenderCounter
</div>


<div style="@TextEditorService.GlobalFontSizeInPixelsStyling @GetGlobalHeightInPixelsStyling() @StyleCssString"
     class="bte_text-editor-css-wrapper @TextEditorService.GlobalThemeCssClassString @ClassCssString">
    
    @if (textEditor is not null &&
         textEditorViewModel is not null)
    {
        <CascadingValue Value="textEditor">
            <CascadingValue Value="textEditorViewModel">

                <TextEditorHeader TextEditorViewModelKey="TextEditorViewModelKey"
                                  HeaderButtonKinds="HeaderButtonKinds"/>

                <div @ref="_textEditorDisplayElementReference"
                     @onclick="FocusTextEditorAsync"
                     @onkeydown="HandleOnKeyDownAsync"
                     @onkeydown:preventDefault="true"
                     @oncontextmenu="HandleOnContextMenuAsync"
                     @oncontextmenu:preventDefault="true"
                     @onmousedown="HandleContentOnMouseDownAsync"
                     @onmousemove="HandleContentOnMouseMoveAsync"
                     @ondblclick="HandleContentOnDoubleClickAsync"
                     @onwheel="HandleOnWheelAsync"
                     id="@ContentElementId"
                     class="bte_text-editor bte_unselectable"
                     tabindex="-1">

                    <GutterSection/>

                    <BodySection @ref="_bodySection"
                                 TabIndex="TabIndex"
                                 HtmlElementId="@MeasureCharacterWidthAndRowHeightElementId"
                                 ContextMenuRenderFragmentOverride="ContextMenuRenderFragmentOverride"
                                 AutoCompleteMenuRenderFragmentOverride="AutoCompleteMenuRenderFragmentOverride"/>
                </div>

                <TextEditorFooter/>
            </CascadingValue>
        </CascadingValue>
    }
    else
    {
        if (textEditor is null)
        {
            <div>The @nameof(TextEditorBase) was null</div>
        }
        else if (textEditorViewModel is not null)
        {
            <div>The @nameof(TextEditorViewModel) was null</div>
        }
    }
</div>